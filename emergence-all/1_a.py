#距离分布，一条订单数据一个移动距离，所有距离list的分布
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
from scipy.optimize import curve_fit
from math import radians, cos, sin, asin, sqrt
import math
import random
from sklearn.metrics import r2_score
from sklearn.metrics import mean_squared_error


#这是数据
x_sh=[0.5, 1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, 10.5, 11.5, 12.5, 13.5, 14.5, 
      15.5, 16.5, 17.5, 18.5, 19.5, 20.5, 21.5, 22.5, 23.5, 24.5, 25.5, 26.5, 27.5,
      28.5, 29.5, 30.5, 31.5, 32.5, 33.5, 34.5, 35.5, 36.5, 37.5, 38.5, 39.5, 40.5, 
      41.5, 42.5, 43.5, 44.5, 45.5, 46.5, 47.5, 48.5, 49.5, 50.5, 53.5, 54.5, 55.5, 
      56.5, 57.5, 58.5, 59.5, 61.5, 63.5, 69.5, 71.5, 72.5, 74.5, 76.5, 78.5, 80.5, 82.5, 95.5]
y_sh=[0.14378031766158494, 0.3769310846164834, 0.2026036744174215, 0.10546681616367966,
      0.060465084424720233, 0.03679505016172681, 0.022748396918483037, 0.014769678718395764, 
      0.00989243650779674, 0.007147092146123546, 0.005150211233017707, 0.003670895240555174, 
      0.0027296902241868166, 0.001956767185797001, 0.0013844127839513782, 0.0010194757038002376,
      0.000807166464141263, 0.0006046410604112734, 0.00046277543944099077, 0.0003571100114079527,
      0.00024948781618911765, 0.0001849144990578166, 0.00017708743031462858, 0.00012523309989100807,
      9.588159210405306e-05, 8.511937258216954e-05, 5.9681399166808534e-05, 4.8919179644925025e-05,
      3.913534371594002e-05, 2.4459589822462512e-05, 2.7394740601158016e-05, 1.858928826507151e-05, 
      1.565413748637601e-05, 3.913534371594002e-06, 4.891917964492502e-06, 1.0762219521883506e-05,
      7.827068743188005e-06, 1.0762219521883506e-05, 4.891917964492502e-06, 2.9351507786955015e-06,
      2.9351507786955015e-06, 1.956767185797001e-06, 8.805452336086505e-06, 3.913534371594002e-06,
      4.891917964492502e-06, 3.913534371594002e-06, 1.956767185797001e-06, 3.913534371594002e-06, 
      3.913534371594002e-06, 9.783835928985006e-07, 1.956767185797001e-06, 9.783835928985006e-07,
      9.783835928985006e-07, 9.783835928985006e-07, 9.783835928985006e-07, 1.956767185797001e-06,
      9.783835928985006e-07, 1.956767185797001e-06, 9.783835928985006e-07, 9.783835928985006e-07,
      9.783835928985006e-07, 9.783835928985006e-07, 1.956767185797001e-06, 9.783835928985006e-07,
      9.783835928985006e-07, 9.783835928985006e-07, 9.783835928985006e-07, 9.783835928985006e-07,
      9.783835928985006e-07]
x_bj=[0.5, 1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, 10.5, 11.5, 12.5, 13.5, 14.5, 15.5,
      16.5, 17.5, 18.5, 19.5, 20.5, 21.5, 22.5, 23.5, 24.5, 25.5, 26.5, 27.5, 29.5, 32.5, 
      33.5, 35.5, 37.5, 51.5]
y_bj=[0.44196967780897717, 0.42090880115208323, 0.09033685014659124, 0.02726422812487096,
      0.010222674154519553, 0.004572911074864764, 0.002149832762109262, 0.0010984664698352397,
      0.0005700411900730892, 0.00036260684643019364, 0.00018872331420076807, 0.0001096853450055746,
      8.06509889746872e-05, 5.516527645868605e-05, 2.677612833959615e-05, 2.0646653177519923e-05,
      2.0324049221621174e-05, 1.064593054465871e-05, 8.06509889746872e-06, 4.193851426683735e-06, 
      1.613019779493744e-06, 4.516455382582483e-06, 9.678118676962465e-07, 2.5808316471899904e-06, 
      3.226039558987488e-06, 1.613019779493744e-06, 9.678118676962465e-07, 6.452079117974976e-07, 
      9.678118676962465e-07, 3.226039558987488e-07, 6.452079117974976e-07, 3.226039558987488e-07, 
      3.226039558987488e-07, 3.226039558987488e-07]
x_nj=[0.5, 1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, 10.5, 11.5, 12.5, 13.5, 14.5, 15.5,
      16.5, 17.5, 18.5, 19.5, 20.5, 21.5, 22.5, 23.5, 24.5, 33.5, 41.5]
y_nj=[0.6151187829952764, 0.2439809669352598, 0.07923242567379828, 0.033326618505140314,
      0.01401639344262295, 0.0068553764934704085, 0.003276604612392331, 0.0017046401778271743,
      0.0010252848013337038, 0.0005300083356487913, 0.0003737149208113365, 0.00022575715476521257,
      0.00013684356765768268, 7.432620172270075e-05, 4.445679355376493e-05, 3.33425951653237e-05,
      1.3198110586273965e-05, 1.2503473186996388e-05, 3.4731869963878855e-06, 3.4731869963878855e-06,
      2.0839121978327314e-06, 3.4731869963878855e-06, 6.946373992775771e-07, 2.7785495971103082e-06,
      6.946373992775771e-07, 1.3892747985551541e-06, 6.946373992775771e-07]
x_nj2=[0.5, 1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, 10.5, 11.5, 12.5, 13.5, 14.5, 15.5, 
       16.5, 17.5, 18.5, 19.5, 20.5, 21.5, 22.5, 23.5, 24.5, 27.5, 31.5]
y_nj2=[0.6628374357106691, 0.22982491983264788, 0.06639085544412565, 0.0245950179284697, 
       0.009058244579265746, 0.003607900962600413, 0.0017062395812051604, 0.00086607388720609,
       0.00040712875039602525, 0.000259822166161827, 0.0001487870524174565, 9.104879327038383e-05,
       8.43866864457216e-05, 4.21933432228608e-05, 3.183006594005288e-05, 1.4804681832582737e-05,
       1.1103511374437052e-05, 7.402340916291368e-06, 3.701170458145684e-06, 2.9609363665165473e-06,
       2.2207022748874103e-06, 1.4804681832582736e-06, 7.402340916291368e-07, 7.402340916291368e-07,
       7.402340916291368e-07, 1.4804681832582736e-06, 7.402340916291368e-07]
x_cd=[0.5, 1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, 10.5, 11.5, 12.5, 13.5, 14.5, 15.5, 16.5,
      17.5, 18.5, 19.5, 20.5, 21.5, 22.5, 23.5, 24.5, 25.5, 26.5, 27.5, 28.5, 29.5, 30.5, 31.5, 
      32.5, 33.5, 34.5, 38.5, 44.5, 46.5, 48.5, 49.5, 66.5]
y_cd=[0.6235942992170916, 0.24012772808548385, 0.07640452089632765, 0.03051079435327735, 
      0.013381200974371791, 0.006586126893583884, 0.0035091972158967193, 0.00209955453918457,
      0.0012719177340170954, 0.0007527676384999136, 0.0005485399976187744, 0.0003228598734518011,
      0.00020787456303973106, 0.00016025005014517967, 9.846689828197787e-05, 7.937418815758565e-05, 
      7.572726599899388e-05, 5.1271435053143166e-05, 2.5742979943000753e-05, 2.3812256447275696e-05, 
      2.5313930277284072e-05, 2.252510745012566e-05, 1.587483763151713e-05, 1.3086014804358716e-05,
      2.8531802770159167e-05, 1.6303887297233808e-05, 2.3812256447275696e-05, 3.646922158591773e-06,
      3.217872492875094e-06, 4.719546322883471e-06, 1.9307234957250566e-06, 1.9307234957250566e-06, 
      1.7161986628667167e-06, 1.7161986628667167e-06, 2.3597731614417355e-06, 2.145248328583396e-07, 
      2.145248328583396e-07, 2.145248328583396e-07, 2.145248328583396e-07, 2.145248328583396e-07, 
      2.145248328583396e-07]
x_xa=[0.5, 1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, 10.5, 11.5, 12.5, 13.5, 14.5, 15.5, 16.5, 
      17.5, 18.5, 19.5, 20.5, 21.5, 22.5, 23.5, 24.5, 25.5, 26.5, 27.5, 28.5, 31.5]
y_xa=[0.5009248941204342, 0.28755078290136243, 0.10773215215505111, 0.048769539889367136,
      0.024843777653261588, 0.012838458433628325, 0.007162245759046252, 0.003999674485770295,
      0.0023121770069899285, 0.0013883321802761227, 0.0007652848867427335, 0.000604160006566247,
      0.00037168315340277793, 0.00020776015663856657, 0.00015389641232486413, 0.0001105256052151297, 
      7.041926745774086e-05, 3.311104628807683e-05, 2.6815283965696023e-05, 1.6089170379417614e-05, 
      3.8240926698905634e-05, 9.793408057036809e-06, 1.4456935703244813e-05, 3.7308221169664033e-06,
      1.3291053791692812e-05, 3.497645734656003e-05, 2.331763823104002e-06, 9.327055292416008e-07,
      2.331763823104002e-07, 2.331763823104002e-07]
x_sh_eu=[0.5, 1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, 10.5, 11.5, 12.5, 13.5, 14.5, 15.5, 
         16.5, 17.5, 18.5, 19.5, 20.5, 21.5, 22.5, 23.5, 24.5, 27.5, 32.5]
y_sh_eu=[0.42393165403573446, 0.3475296792662906, 0.12029519789764934, 0.05159995068946692, 
         0.02465233139026352, 0.012855960410686297, 0.007484634485673529, 0.004465342717988757,
         0.0026749007429845003, 0.0016250951478044093, 0.0010527407459587866, 0.0006809549806573563,
         0.00045103483632620876, 0.00023970398026013263, 0.00016241167642115108, 0.00010077351006854555,
         6.848685150289503e-05, 5.478948120231603e-05, 2.7394740601158016e-05, 1.663252107927451e-05, 
         1.1740603114782006e-05, 7.827068743188005e-06, 1.956767185797001e-06, 3.913534371594002e-06, 
         1.956767185797001e-06, 1.956767185797001e-06, 9.783835928985006e-07]
x_bj_eu=[0.5, 1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, 10.5, 11.5, 12.5, 13.5, 14.5, 15.5,
         16.5, 17.5, 18.5, 19.5, 20.5, 21.5, 22.5, 23.5, 24.5, 25.5, 26.5, 28.5, 30.5, 31.5, 34.5, 44.5]
y_bj_eu=[0.7659976075690631, 0.18896591237560392, 0.02832656295164554, 0.008951937172234381,
         0.0039006044307717718, 0.0018888461617871744, 0.0008345764339100632, 0.0005026169632902506, 
         0.0002400173431886691, 0.00013775188916876575, 7.903796919519346e-05, 5.7746108105876036e-05, 
         3.290560350167238e-05, 2.6453524383697403e-05, 2.2582276912912415e-05, 9.678118676962464e-06, 
         5.4842672502787295e-06, 3.871247470784986e-06, 2.2582276912912417e-06, 1.613019779493744e-06, 
         2.5808316471899904e-06, 2.9034356030887395e-06, 2.2582276912912417e-06, 9.678118676962465e-07,
         6.452079117974976e-07, 3.226039558987488e-07, 3.226039558987488e-07, 3.226039558987488e-07, 
         3.226039558987488e-07, 6.452079117974976e-07, 3.226039558987488e-07, 3.226039558987488e-07]
x_sh_ro=[0.5, 1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, 10.5, 11.5, 12.5, 13.5, 14.5, 15.5, 
         16.5, 17.5, 18.5, 19.5, 20.5, 21.5, 22.5, 23.5, 24.5, 25.5, 26.5, 29.5, 30.5, 34.5, 35.5, 38.5]
y_sh_ro=[0.21422652190460537, 0.4000788579490476, 0.18838244344192445, 0.08837373580238941,
         0.04519558434620792, 0.024883302954433608, 0.013853952338881762, 0.008676331168164087,
         0.0054936399987868005, 0.003530996750778551, 0.0023647600849630804, 0.0015595480245888086,
         0.0010576357682437279, 0.0007298763025992794, 0.0004764742082652132, 0.0003620029919058088,
         0.00023383436504186028, 0.00014186603736849262, 0.00012719024039933822, 7.729253070421323e-05, 
         4.9897709695124994e-05, 4.696255030129411e-05, 2.5438048079867645e-05, 1.467579696915441e-05,
         1.467579696915441e-05, 9.78386464610294e-06, 5.870318787661764e-06, 2.935159393830882e-06, 
         9.78386464610294e-07, 9.78386464610294e-07, 9.78386464610294e-07, 9.78386464610294e-07]


def pdf1(data,step):
    all_num=len(data)    
    x_range=np.arange(0,130,step)
#    y=np.zeros((len(x_range)-1), dtype=np.int)
    y=np.zeros(len(x_range)-1)
    x=x_range[:-1]+step/2
        
    for data1 in data:
        a=int(data1//step)        
        y[a]=y[a]+1
    y=y/all_num    
    x1=[]
    y1=[]
    for i in range(len(x)):
        if(y[i]!=0):
            x1.append(x[i])
            y1.append(y[i])
        
    return x1,y1

#幂律 
def func1(x, a, b):
    return a*pow(x,-b)

#幂律和指数
#def func2(x, a,b1,b2,c):
#    return a*pow(x+c,-b1)*np.exp((-b2)*x)
def func2(x, a,b1,b2,c):
    return a*pow(x+c,-b1)*np.exp(-x/b2)

def func3(x, a,b1,b2):
    return a*pow(x,-b1)*np.exp((-b2)*x)

#log_normal
def func4( x, a, mu, sigma ):
    return a / x * 1. / (sigma * np.sqrt( 2. * np.pi ) ) * np.exp( -( np.log( x ) - mu )**2 / ( 2. * sigma**2 ) ) 

def log_pdf(x,y,left,right,number):
    bins=np.logspace(left, right, number)
    bins2=list(bins)
    bins_all={}
    for i in range(len(bins)-1):
        bins_all[bins[i]]=[]
    widths = (bins[1:] - bins[:-1])
    for i in range(len(x)):
        if(x[i]>0 and x[i]<10**right):
            for j in range(len(bins)):
                if(x[i]<bins[j]):
                    bins_all[bins[j-1]].append(y[i])
                    break
                if(x[i]==bins[j]):
                    bins_all[bins[j]].append(y[i])
                    break
    x_new=[]
    y_new=[]
    for key,value in bins_all.items():
        if(len(value)>0):
            index_this=bins2.index(key)
            y_new.append(np.sum(value)/widths[index_this])
#            y_new.append(np.mean(value))
            x_new.append(key)
        
    return x_new,y_new


#这是计算分布方法
#data1=pd.read_csv('C:/python/MobikeData/lak3.csv')
#data2=pd.read_csv('C:/python/MOBIKE_CUP_2017/Mobike_bj2.csv')
#dis_all1=data1['d']
#dis_all2=data2['d(m)']/1000
#DELTA=1
#x_sh,y_sh=pdf1(dis_all1,DELTA)
#x_bj,y_bj=pdf1(dis_all2,DELTA)


 
#这是画图
f_family='Arial'
fig	=	plt.figure(figsize=(6, 6))
ax	=	fig.add_subplot(1,	1,	1)

#原图
#popt, pcov = curve_fit(func2, x_sh[4:],y_sh[4:],maxfev = 10000)
#y777 = [func2(i, *popt) for i in x_sh]
#ax.scatter(x_sh,y_sh,label=r'D1, $\alpha$=%.2f'%popt[1])
#ax.plot(x_sh,y777,'b-')
##popt, pcov = curve_fit(func1, x_bj[7:],y_bj[7:],maxfev = 10000)
#popt, pcov = curve_fit(func2, x_bj[1:],y_bj[1:],maxfev = 10000)
#y888 = [func2(i, *popt) for i in x_bj]
#ax.scatter(x_bj,y_bj,label=r'D2, $\alpha$=%.2f'%popt[1])
#ax.plot(x_bj,y888,color='orange',linestyle='-')



#popt, pcov = curve_fit(func3, x_sh[5:],y_sh[5:],maxfev = 10000)
#y777 = [func3(i, *popt) for i in x_sh]
#ax.scatter(x_sh,y_sh,label=r'D1, $\alpha$=%.2f'%popt[1])
#ax.plot(x_sh,y777,'b-')
##popt, pcov = curve_fit(func3, x_bj[3:],y_bj[3:],maxfev = 10000)
##y888 = [func3(i, *popt) for i in x_bj]
##ax.scatter(x_bj,y_bj,label=r'D2, $\alpha$=%.2f'%popt[1])
##ax.plot(x_bj,y888,color='orange',linestyle='-')
##popt, pcov = curve_fit(func3, x_nj2[5:],y_nj2[5:],maxfev = 10000)
##y999 = [func3(i, *popt) for i in x_nj2]
##ax.scatter(x_nj2,y_nj2,label=r'D3, $\alpha$=%.2f'%popt[1])
##ax.plot(x_nj2,y999,color='g',linestyle='-')
##7,6
#popt, pcov = curve_fit(func3, x_bj[6:],y_bj[6:],maxfev = 10000)
#y888 = [func3(i, *popt) for i in x_bj]
#ax.scatter(x_bj,y_bj,label=r'D2, $\alpha$=%.2f'%popt[1])
#ax.plot(x_bj,y888,color='orange',linestyle='-')
#popt, pcov = curve_fit(func3, x_nj2[4:],y_nj2[4:],maxfev = 10000)
#y999 = [func3(i, *popt) for i in x_nj2]
#ax.scatter(x_nj2,y_nj2,label=r'D3, $\alpha$=%.2f'%popt[1])
#ax.plot(x_nj2,y999,color='g',linestyle='-')
##ax.scatter(x_nj2,y_nj2,label=r'D3 (NJ)')
##ax.scatter(x_nj,y_nj,label=r'D4 (NJ)')
##ax.scatter(x_cd,y_cd,label=r'cd')
##ax.scatter(x_xa,y_xa,label=r'xa')



#logbin
#x_sh=[i*1000 for i in x_sh]
#x_bj=[i*1000 for i in x_bj]
#x_nj2=[i*1000 for i in x_nj2]
#x_sh_log,y_sh_log=log_pdf(x_sh[0:],y_sh[0:],2.3,5)
#x_bj_log,y_bj_log=log_pdf(x_bj[0:],y_bj[0:],2.3,5)
#x_nj2_log,y_nj2_log=log_pdf(x_nj2[0:],y_nj2[0:],2.3,5)
#x_nj_log,y_nj_log=log_pdf(x_nj,y_nj,-1,2)
#popt, pcov = curve_fit(func2, x_sh[4:],y_sh[4:],maxfev = 10000)
#y777 = [func2(i, *popt) for i in x_sh_log]
#ax.scatter(x_sh_log,y_sh_log,label=r'D1, $\alpha$=%.2f'%popt[1])
#ax.plot(x_sh_log,y777,'b-')
#popt, pcov = curve_fit(func2, x_bj[1:],y_bj[1:],maxfev = 10000)
#y888 = [func2(i, *popt) for i in x_bj_log]
#ax.scatter(x_bj_log,y_bj_log,label=r'D2, $\alpha$=%.2f'%popt[1])
#ax.plot(x_bj_log,y888,color='orange',linestyle='-')
#ax.scatter(x_nj2_log,y_nj2_log,label=r'D3')
data1=pd.read_csv('C:/python/摩拜单车/距离/dis_sh.txt')
data2=pd.read_csv('C:/python/摩拜单车/距离/dis_bj.txt')
data3=pd.read_csv('C:/python/摩拜单车/距离/dis_nj.txt')
x_sh,y_sh=data1['x'],data1['y']
x_bj,y_bj=data2['x'],data2['y']
x_nj,y_nj=data3['x'],data3['y']
x_nj=list(x_nj)[1:]
y_nj=list(y_nj)[1:]
x_sh_log,y_sh_log=log_pdf(x_sh[:],y_sh[:],0,3,35)
x_bj_log,y_bj_log=log_pdf(x_bj[:],y_bj[:],0,3,30)  
x_nj_log,y_nj_log=log_pdf(x_nj[:],y_nj[:],0,3,35)
#ax.scatter(x_sh,y_sh,label=r'D1')   #15,16
#ax.scatter(x_bj,y_bj,label=r'D2')
#ax.scatter(x_nj,y_nj,label=r'D3')
no=8
#popt, pcov = curve_fit(func2, x_sh_log[10:],y_sh_log[10:],maxfev = 10000)
#y777 = [func2(i, *popt) for i in x_sh_log]
#ax.scatter(x_sh_log,y_sh_log,label=r'D1, $\alpha$=%.2f'%popt[1])
#ax.plot(x_sh_log,y777,'b-')
#popt, pcov = curve_fit(func4, x_bj_log[2:],y_bj_log[2:],maxfev = 10000)
#y888 = [func4(i, *popt) for i in x_bj_log]
##ax.scatter(x_bj_log,y_bj_log,label=r'D2, $\alpha$=%.2f'%popt[1])
#ax.scatter(x_bj_log,y_bj_log,label=r'D2, $\mu$=%.2f, $\sigma$=%.2f'%(popt[1],popt[2]))
#ax.plot(x_bj_log,y888,color='orange',linestyle='-')
#popt, pcov = curve_fit(func2, x_nj_log[10:],y_nj_log[10:],maxfev = 10000)
#y999 = [func2(i, *popt) for i in x_nj_log]
#ax.scatter(x_nj_log,y_nj_log,label=r'D3, $\alpha$=%.2f'%popt[1])
#ax.plot(x_nj_log,y999,color='g',linestyle='-')




#这是拟合数据
popt, pcov = curve_fit(func4, x_sh_log[17:],y_sh_log[17:],maxfev = 10000)   #17
y777 = [func4(i, *popt) for i in x_sh_log]
r11=r2_score(y_sh_log,y777)
ax.scatter(x_sh_log,y_sh_log,label=r'D1, $\mu$=%d, $\sigma$=%d, R$^2$=%.2f'%(popt[1]*100,popt[2]*100,r11))
ax.plot(x_sh_log,y777,'b-')
popt, pcov = curve_fit(func4, x_bj_log[2:],y_bj_log[2:],maxfev = 10000)
y888 = [func4(i, *popt) for i in x_bj_log]
r22=r2_score(y_bj_log,y888)
ax.scatter(x_bj_log,y_bj_log,label=r'D2, $\mu$=%d, $\sigma$=%d, R$^2$=%.2f'%(popt[1]*100,popt[2]*100,r22))
ax.plot(x_bj_log,y888,color='orange',linestyle='-')
popt, pcov = curve_fit(func4, x_nj_log[2:],y_nj_log[2:],maxfev = 10000)
y999 = [func4(i, *popt) for i in x_nj_log]
r33=r2_score(y_nj_log,y999)
ax.scatter(x_nj_log,y_nj_log,label=r'D3, $\mu$=%d, $\sigma$=%d, R$^2$=%.2f'%(popt[1]*100,popt[2]*100,r33))
ax.plot(x_nj_log,y999,color='g',linestyle='-')

#plt.text(100,0.002, r'D3, R$^2$=%.2f'%r33,fontdict=dict(fontsize=18,family='Arial'))
#plt.text(100,0.01,  r'D2, R$^2$=%.2f'%r22,fontdict=dict(fontsize=18,family='Arial'))
#plt.text(100,0.05,   r'D1, R$^2$=%.2f'%r11,fontdict=dict(fontsize=18,family='Arial'))

ax.set_yscale('log')
ax.set_xscale('log')
ax.set_ylim([0.000000001,1])
my_x=[r'10$^2$',r'10$^2$',r'10$^2$',r'10$^3$',r'10$^4$',r'10$^5$',r'10$^5$']
my_y=[r'10$^{-10}$',r'10$^{-9}$',r'10$^{-7}$',r'10$^{-5}$',r'10$^{-3}$',r'10$^{-1}$',r'10$^{0}$',r'10$^{-10}$']
#my_x=[1.e0, 1.e1, 1.e2 ,1.e3 ,1.e4 ,1.e5 ,1.e6 ]
#my_y=[1.e-12, 1.e-10, 1.e-08 ,1.e-06 ,1.e-04 ,1.e-02 ,1.e+00 ,1.e+02]
#print(ax.get_yticks())
ax.set_xticklabels(my_x,family=f_family,size=18)
ax.set_yticklabels(my_y,family=f_family,size=18)
ax.legend(loc=3,handletextpad=0.1,prop={'size':16,'family':f_family})
ax.set_xlabel(r'log$_{10}d$(m)',size=18,family=f_family)
ax.set_ylabel('log'+r'$_{10}P$($d$)',size=18,family=f_family)
#plt.yticks(fontproperties = f_family)
#plt.xticks(fontproperties = f_family) 
#plt.tick_params(labelsize=18)
#plt.savefig('C:/python/摩拜单车/draw2/1_a.pdf',bbox_inches='tight')





