#人和车的指标对比
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import random
from scipy.optimize import curve_fit
from scipy.special import factorial
import time


def log_pdf(x,y):
#    bins=np.logspace(0, 4, 20,base=2)
    bins=np.logspace(0, 3, 30)
    bins2=list(bins)
    bins_all={}
    for i in range(len(bins)-1):
        bins_all[bins[i]]=[]
    widths = (bins[1:] - bins[:-1])
    for i in range(len(x)):
        if(x[i]>=1):
            for j in range(len(bins)):
                if(x[i]<bins[j]):
                    bins_all[bins[j-1]].append(y[i])
                    break
                if(x[i]==bins[j]):
                    bins_all[bins[j]].append(y[i])
                    break
    x_new=[]
    y_new=[]
    for key,value in bins_all.items():
        if(len(value)>0):
#            index_this=bins2.index(key)
#            y_new.append(np.sum(value)/widths[index_this])
            y_new.append(np.mean(value))
            x_new.append(key)
        
    return x_new,y_new

trips_xm_x=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,
            23, 24, 25, 27, 28, 33, 36, 38, 40, 44, 48, 51, 52, 54, 58, 62, 64, 83]
trips_xm_y=[0.16437113869523323, 0.16488125602221845, 0.15445219067052088, 0.13470876079276012,
            0.11430406771335185, 0.08496287479453608, 0.06436924937179996, 0.04430463451038183, 
            0.028755502654499422, 0.017891892913147803, 0.01120368795934176, 0.006858244062801111, 
            0.0038920062725537985, 0.0019460031362768992, 0.0010391278883031987, 0.000529010561317992,
            0.00028339851499178145, 0.0002456120463262106, 9.446617166392715e-05, 0.0001889323433278543,
            9.446617166392715e-05, 9.446617166392715e-05, 1.889323433278543e-05, 7.557293733114171e-05,
            7.557293733114171e-05, 3.778646866557086e-05, 5.667970299835629e-05, 1.889323433278543e-05, 
            1.889323433278543e-05, 1.889323433278543e-05, 1.889323433278543e-05, 1.889323433278543e-05, 
            1.889323433278543e-05, 1.889323433278543e-05, 3.778646866557086e-05, 1.889323433278543e-05,
            1.889323433278543e-05, 1.889323433278543e-05, 1.889323433278543e-05, 1.889323433278543e-05]
trips_sgp_x=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,
             23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 
             43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 59, 62, 69, 71, 80, 84, 170]
trips_sgp_y=[0.10874232665033717, 0.08917717499773202, 0.0752668662493574, 0.06719283921497475, 
             0.05972360821313012, 0.05724394447972421, 0.05533883697722943, 0.05125646375759775, 
             0.04744624875260818, 0.04427106958178354, 0.04118660981583961, 0.036771598778312015,
             0.033596419607487375, 0.029453566784601894, 0.026762224439807674, 0.026066709002388944,
             0.02204481538601107, 0.01896035562006713, 0.01714596752245305, 0.014484864979285736, 
             0.012670476881671656, 0.010795609180803774, 0.009192899694578004, 0.007680909613232937,
             0.006047960325380266, 0.005412924491215338, 0.0044452508391544954, 0.004052133418004778,
             0.002661102543167317, 0.002691342344794218, 0.002116786113883093, 0.0016934288911064743, 
             0.0015422298829719677, 0.0014212706764643625, 0.0009071940488070398, 0.0008164746439263358,
             0.0008467144455532371, 0.00030239801626901326, 0.00039311742114971727, 0.00039311742114971727, 
             0.0003326378178959146, 0.0001209592065076053, 0.00027215821464211196, 0.00015119900813450663, 
             0.00015119900813450663, 6.047960325380265e-05, 6.047960325380265e-05, 3.0239801626901326e-05,
             9.071940488070398e-05, 6.047960325380265e-05, 3.0239801626901326e-05, 3.0239801626901326e-05, 
             9.071940488070398e-05, 3.0239801626901326e-05, 3.0239801626901326e-05, 9.071940488070398e-05,
             3.0239801626901326e-05, 3.0239801626901326e-05, 3.0239801626901326e-05, 3.0239801626901326e-05,
             3.0239801626901326e-05]


dis_xm_x1=[0.5, 1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5]
dis_xm_y1=[0.6260084263825124, 0.336356250826579, 0.030021349354796046, 0.005479037956507775,
           0.0013036331689621947, 0.0005101173269852066, 0.0001889323433278543, 7.557293733114171e-05,
           5.667970299835629e-05]
dis_sgp_x1=[0.5, 1.5, 2.5, 3.5, 4.5, 5.5, 7.5]
dis_sgp_y1=[0.9195318878708155, 0.07375487616801234, 0.004929087665184916, 0.001209592065076053, 
            0.00039311742114971727, 0.00015119900813450663, 3.0239801626901326e-05]


gy_xm_x=[0.5, 1.5, 2.5, 3.5, 4.5, 5.5, 6.5]
gy_xm_y=[0.5958359311530541, 0.29855088892667536, 0.08282793931493132, 0.017551814695157663, 
         0.004326550662207863, 0.0008690887793081298, 3.778646866557086e-05]
gy_sgp_x=[0.5, 1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, 10.5, 12.5, 13.5]
gy_sgp_y=[0.8346790045057304, 0.12694668722973176, 0.024191841301521064, 0.007590190208352233,
          0.0032658985757053434, 0.0017236686927333757, 0.0007559950406725332, 0.0003628776195228159, 
          0.00015119900813450663, 0.0002419184130152106, 3.0239801626901326e-05, 3.0239801626901326e-05, 
          3.0239801626901326e-05]


rank_xm_x=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
rank_xm_y=[0.577005701697722, 0.2972271820770386, 0.2058873938269588, 0.16181294151972983,
           0.1349211893715978, 0.1164555635538031, 0.10290126583935744, 0.09204108203147027,
           0.08285808649725827, 0.07501535818099285, 0.06948369144224759, 0.05653409090909091,
           0.06666666666666667]
rank_xm_std=[0.2696849613242988, 0.11364597171553012, 0.06881433567473556, 0.04686248160145613, 
             0.03431277446074711, 0.026287040993115282, 0.02091443811238834, 0.017273880676288052,
             0.014044611993038157, 0.01280911115785018, 0.010790202425583989, 0.015239740768512438, 0.0]
rank_sgp_x=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 
            24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44,
            45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64]
rank_sgp_y=[0.6474668381556673, 0.2655331346051308, 0.15408034313218744, 0.10696301909465976, 
            0.08222035464801308, 0.06681420454335878, 0.05746237087592625, 0.05085288029336824, 
            0.04691360932748681, 0.04251431303837411, 0.04010485081422243, 0.03766433523865221, 
            0.03406982742281156, 0.03258304111163162, 0.027235497380387684, 0.0236546791077852, 
            0.02065580662621279, 0.02065580662621279, 0.016520306069641933, 0.016520306069641933,
            0.016520306069641933, 0.016520306069641933, 0.016520306069641933, 0.01307462501129484,
            0.01307462501129484, 0.01307462501129484, 0.01307462501129484, 0.01307462501129484, 
            0.012056489262371614, 0.012056489262371614, 0.011834733893557423, 0.008893557422969187,
            0.008893557422969187, 0.008893557422969187, 0.008893557422969187, 0.008893557422969187, 
            0.008893557422969187, 0.008893557422969187, 0.008893557422969187, 0.0058823529411764705,
            0.0058823529411764705, 0.0058823529411764705, 0.0058823529411764705, 0.0058823529411764705,
            0.0058823529411764705, 0.0058823529411764705, 0.0058823529411764705, 0.0058823529411764705,
            0.0058823529411764705, 0.0058823529411764705, 0.0058823529411764705, 0.0058823529411764705, 
            0.0058823529411764705, 0.0058823529411764705, 0.0058823529411764705, 0.0058823529411764705,
            0.0058823529411764705, 0.0058823529411764705, 0.0058823529411764705, 0.0058823529411764705, 
            0.0058823529411764705, 0.0058823529411764705, 0.0058823529411764705, 0.0058823529411764705]
rank_sgp_std=[0.25508737116441066, 0.10492930243328497, 0.06123753027218252, 0.041422158417389006, 
              0.03033697823893892, 0.023374943777221914, 0.019039385687871283, 0.016182806679108618,
              0.014495848713977903, 0.012058147887956904, 0.010629305610224633, 0.00995804799637458, 
              0.008768904852186664, 0.010568095680689105, 0.007899608424763296, 0.008397192276434812,
              0.008675325903475776, 0.008675325903475776, 0.007073873400933301, 0.007073873400933301, 
              0.007073873400933301, 0.007073873400933301, 0.007073873400933301, 0.001784941549821695, 
              0.001784941549821695, 0.001784941549821695, 0.001784941549821695, 0.001784941549821695, 
              0.0003187791849614305, 0.0003187791849614305, 7.002801120448154e-05, 0.003011204481792717,
              0.003011204481792717, 0.003011204481792717, 0.003011204481792717, 0.003011204481792717, 
              0.003011204481792717, 0.003011204481792717, 0.003011204481792717, 0.0, 0.0, 0.0, 0.0, 
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0]


ith_xm_x=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,
          24, 25, 39, 41, 43, 44, 52]
ith_xm_y=[0.40594003287422775, 0.21963384911863063, 0.13875191293997619, 0.09055527215704057,
          0.057926656464320124, 0.03455572559466455, 0.022086190935026166, 0.014037673109259574,
          0.007632866670445313, 0.0041187250845472236, 0.0022294016512686807, 0.0010958075913015549,
          0.0004912240926524212, 0.0001889323433278543, 0.00017003910899506886, 0.00011335940599671258, 
          7.557293733114171e-05, 3.778646866557086e-05, 3.778646866557086e-05, 3.778646866557086e-05, 
          3.778646866557086e-05, 1.889323433278543e-05, 1.889323433278543e-05, 5.667970299835629e-05, 
          3.778646866557086e-05, 1.889323433278543e-05, 1.889323433278543e-05, 1.889323433278543e-05, 
          1.889323433278543e-05, 3.778646866557086e-05]
ith_sgp_x=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 
           25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 50, 60, 63, 67, 71, 160]
ith_sgp_y=[0.2742447609543681, 0.14496960899936495, 0.10623242311530437, 0.08228250022679852, 
           0.06571108893525658, 0.05195197919501648, 0.044029151168768335, 0.037981190843388066, 
           0.03244730714566513, 0.02709486225770359, 0.021319060146965437, 0.019504672049351357,
           0.01502918140856996, 0.013184553509328978, 0.011702803229610814, 0.008890501678308991,
           0.009011460884816596, 0.006622516556291391, 0.004989567268438719, 0.004475490640781396,
           0.003326378178959146, 0.0029030209561825273, 0.0023587045268983037, 0.0018748677008678823,
           0.001391030874837461, 0.001209592065076053, 0.0012398318667029545, 0.0009071940488070398,
           0.0008164746439263358, 0.0003326378178959146, 0.0003326378178959146, 0.0003628776195228159,
           0.00021167861138830928, 0.0001209592065076053, 0.00030239801626901326, 9.071940488070398e-05, 
           9.071940488070398e-05, 0.0001209592065076053, 3.0239801626901326e-05, 3.0239801626901326e-05, 
           6.047960325380265e-05, 3.0239801626901326e-05, 3.0239801626901326e-05, 3.0239801626901326e-05, 
           3.0239801626901326e-05, 3.0239801626901326e-05, 3.0239801626901326e-05, 3.0239801626901326e-05]


unique_t_xm_x1=[1.0, 1.6102620275609394, 2.592943797404667, 17.43328822199988, 22.122162910704493, 
                35.62247890262442, 45.20353656360243, 57.36152510448679, 72.7895384398315, 92.36708571873861]
unique_t_xm_y1=[2.111930450981914, 2.322782920274709, 2.3824451410658307, 2.0373245118883347,
                2.842376690374808, 2.5044439851178173, 3.1845793920544914, 3.340670803529845, 
                3.872933061201569, 4.282504210170237]
unique_t_sgp_x1=[1.0, 1.6102620275609394, 2.592943797404667, 3.2903445623126686, 4.1753189365604015,
                 5.298316906283708, 6.7233575364993365, 8.531678524172808, 10.826367338740546,
                 13.73823795883263, 17.43328822199988, 22.122162910704493, 28.072162039411772, 
                 35.62247890262442, 45.20353656360243, 57.36152510448679, 72.7895384398315, 
                 92.36708571873861, 117.21022975334806, 148.73521072935117]
unique_t_sgp_y1=[1.6096662830840045, 1.6789972485478446, 1.7217514124293785, 1.7875766871165644,
                 1.8158432013066559, 1.8398420359806933, 1.8806573645482052, 1.8899207128094289, 
                 1.96598577033134, 2.0649403822947994, 2.198903475856986, 2.3881212540257226, 
                 2.6220148080451113, 2.7372664059366767, 3.0464245169381545, 3.216643894173863, 
                 3.5694238883174494, 3.9425840309705706, 4.484258236941022, 4.988760748319519]




#normal
def func1(x,mu,sigma):
    return np.exp(-((x - mu)**2)/(2*sigma**2)) / (sigma * np.sqrt(2*np.pi))

def func2(x, a,b1,b2,c):
    return a*pow(x+c,-b1)*np.exp((-b2)*x)

#泊松    
def func3(x, a):
    return (a**x/factorial(x)) * np.exp(-a)

#幂律 
def func4(x, a, b):
    return a*pow(x,b)

def func5(x, a,b1,b2):
    return a*pow(x,-b1)*np.exp((-b2)*x)
def func6(x, a, b):
    return a * x + b

def func7(x, a, b):
    return a * np.log(x) + b



f_family='Arial'
size_x=8
size_y=6
alpha_xy=1
fig	=	plt.figure(figsize=(size_x, size_y))
ax1	=	fig.add_subplot(1,	1,	1)
plt.yticks(fontproperties = f_family)
plt.xticks(fontproperties = f_family) 
plt.tick_params(labelsize=18)
popt, pcov = curve_fit(func4, unique_t_xm_x1[3:],unique_t_xm_y1[3:])
y888= [func4(i, *popt) for i in unique_t_xm_x1[0:]]
ax1.scatter(unique_t_xm_x1,unique_t_xm_y1,label=r'D7, $\mu$=%.2f'%popt[1],alpha=alpha_xy)
ax1.plot(unique_t_xm_x1[0:],y888,c='b',linestyle='-')
popt, pcov = curve_fit(func4, unique_t_sgp_x1[10:],unique_t_sgp_y1[10:])
y777= [func4(i, *popt) for i in unique_t_sgp_x1[0:]]
ax1.scatter(unique_t_sgp_x1,unique_t_sgp_y1,label=r'D8, $\mu$=%.2f'%popt[1],alpha=alpha_xy)
ax1.plot(unique_t_sgp_x1[0:],y777,c='orange',linestyle='-')
ax1.plot([24,24],[1,100],color='k',linestyle='--')
ax1.plot([168,168],[1,100],color='k',linestyle='--')
ax1.plot([720,720],[1,100],color='k',linestyle='--')
ax1.text(19, 70,r'Day', size = 18,family=f_family)
ax1.text(120, 70,r'Week', size = 18,family=f_family)
ax1.text(400, 70,r'Month', size = 18,family=f_family)
ax1.set_yscale('log')
ax1.set_xscale('log')
ax1.set_xlim([1,1000])
ax1.set_ylim([1.6,100])
ax1.legend(loc=2,handletextpad=0.1,prop={'size':18,'family':f_family})
ax1.set_xlabel('t(h)',size=18,family=f_family) 
ax1.set_ylabel(r'S(t)',size=18,family=f_family)
#plt.savefig('C:/python/摩拜单车/draw2/sf_4_xm1.pdf',bbox_inches='tight') 


#fig2	=	plt.figure(figsize=(size_x, size_y))
#ax2	=	fig2.add_subplot(1,	1,	1)
#plt.yticks(fontproperties = f_family)
#plt.xticks(fontproperties = f_family) 
#plt.tick_params(labelsize=18)
#popt, pcov = curve_fit(func4, rank_xm_x,rank_xm_y,maxfev = 10000)
#y888 = [func4(i, *popt) for i in rank_xm_x]
#ax2.errorbar(rank_xm_x,rank_xm_y,fmt="o",yerr = rank_xm_std,label=r'D7, $\xi$=%.2f'%-popt[1])
#ax2.plot(rank_xm_x,y888,color='b',linestyle='-',linewidth=2)
#popt, pcov = curve_fit(func4, rank_sgp_x,rank_sgp_y,maxfev = 10000)
#y777 = [func4(i, *popt) for i in rank_sgp_x]
#ax2.errorbar(rank_sgp_x,rank_sgp_y,fmt="o",yerr = rank_sgp_std,label=r'D8, $\xi$=%.2f'%-popt[1])
#ax2.plot(rank_sgp_x,y777,color='orange',linestyle='-',linewidth=2)
#ax2.set_yscale('log')
#ax2.set_xscale('log')
#ax2.set_ylim([0.001,1])
#ax2.legend(loc=3,handletextpad=0.1,prop={'size':18,'family':f_family})
#ax2.set_xlabel('log'+r'$_{10}L$',size=18,family=f_family) 
#ax2.set_ylabel('log'+r'$_{10}P(L)$',size=18,family=f_family) 
##plt.savefig('C:/python/摩拜单车/draw2/sf_4_xm2.pdf',bbox_inches='tight') 
#
#
#fig3	=	plt.figure(figsize=(size_x, size_y))
#ax3	=	fig3.add_subplot(1,	1,	1)
#plt.yticks(fontproperties = f_family)
#plt.xticks(fontproperties = f_family) 
#plt.tick_params(labelsize=18)
#ax3.scatter(ith_xm_x,ith_xm_y)
#ax3.scatter(ith_sgp_x,ith_sgp_y)
##popt, pcov = curve_fit(func5, ith_x2[:],ith_y2[:],maxfev = 1000000)
##y888 = [func5(i, *popt) for i in ith_x2]
##ax3.scatter(ith_x2,ith_y2,label=r'D4, $\alpha$=%.2f'%popt[1])
##ax3.plot(ith_x2,y888,color='b',linestyle='-')
##popt, pcov = curve_fit(func5, ith_x[:], ith_y[:],maxfev = 10000)
##y777 = [func5(i, *popt) for i in ith_x]
##ax3.scatter(ith_x,ith_y,label=r'D5, $\alpha$=%.2f'%popt[1])
##ax3.plot(ith_x,y777,c='orange',linestyle='-')
#ax3.set_ylim([-0.04,0.64])
##ax3.set_yscale('log')
##ax3.set_xscale('log')
##ax3.set_ylim([0.000001,1])
##ax3.set_xlim([0.5,150])
##ax3.legend(loc=3,handletextpad=0.1,prop={'size':18,'family':f_family})
#ax3.set_xlabel(r'i$^{th}$ trip',size=18,family=f_family)  
#ax3.set_ylabel(r'$P(i)$',size=18,family=f_family)
##plt.savefig('C:/python/摩拜单车/draw2/sf_4_xm3.pdf',bbox_inches='tight') 
#
#
#fig4	=	plt.figure(figsize=(size_x, size_y))
#ax4	=	fig4.add_subplot(1,	1,	1)
#plt.yticks(fontproperties = f_family)
#plt.xticks(fontproperties = f_family) 
#plt.tick_params(labelsize=18)
#popt, pcov = curve_fit(func1, trips_xm_x[7:],trips_xm_y[7:],maxfev = 10000)
##popt, pcov = curve_fit(func1, trips_cd_x[7:40]+trips_cd_x[50:],trips_cd_y[7:40]+trips_cd_y[50:],maxfev = 10000)
#y888 = [func1(i, *popt) for i in trips_xm_x]
#ax4.scatter(trips_xm_x,trips_xm_y,label=r'D7, $\mu$=%.2f, $\sigma$=%.2f'%(popt[0],popt[1]),alpha=alpha_xy)
#ax4.plot(trips_xm_x,y888,color='b',linestyle='-')
#cut_sgp=10
#popt, pcov = curve_fit(func1, trips_sgp_x[7:],trips_sgp_y[7:],maxfev = 10000)
#y777 = [func1(i, *popt) for i in trips_sgp_x]
#ax4.scatter(trips_sgp_x,trips_sgp_y,label=r'D8, $\mu$=%.2f, $\sigma$=%.2f'%(popt[0],popt[1]),alpha=alpha_xy)
#ax4.plot(trips_sgp_x,y777,color='orange',linestyle='-')
##popt, pcov = curve_fit(func5, trips_sgp_x[:],trips_sgp_y[:],maxfev = 10000)
##y777 = [func5(i, *popt) for i in trips_sgp_x]
##ax4.scatter(trips_sgp_x,trips_sgp_y,label=r'D8, $\alpha$=%.2f'%popt[1],alpha=alpha_xy)
##ax4.plot(trips_sgp_x,y777,color='orange',linestyle='-')
#ax4.set_yscale('log')
#ax4.set_xscale('log')
#ax4.set_ylim([0.000001,1])
#ax4.set_xlim([0.8,160])
#ax4.legend(loc=3,handletextpad=0.1,prop={'size':20,'family':f_family})
#ax4.set_xlabel('log'+r'$_{10}$'+'#trips',size=18,family=f_family)  
#ax4.set_ylabel('log'+r'$_{10}P$(#)',size=18,family=f_family)
##plt.savefig('C:/python/摩拜单车/draw2/sf_4_xm4.pdf',bbox_inches='tight') 
#
#
#fig5	=	plt.figure(figsize=(size_x, size_y))
#ax5	=	fig5.add_subplot(1,	1,	1)
#plt.yticks(fontproperties = f_family)
#plt.xticks(fontproperties = f_family) 
#plt.tick_params(labelsize=18)
#popt, pcov = curve_fit(func3, gy_xm_x[2:],gy_xm_y[2:],maxfev = 10000)
#y888 = [func3(i, *popt) for i in gy_xm_x]
#ax5.scatter(gy_xm_x,gy_xm_y,label=r'D7, $\lambda$=%.2f'%popt[0],alpha=alpha_xy)
#ax5.plot(gy_xm_x,y888,color='b',linestyle='-')
#popt, pcov = curve_fit(func5, gy_sgp_x[3:],gy_sgp_y[3:],maxfev = 10000)
#y777 = [func5(i, *popt) for i in gy_sgp_x]
#ax5.scatter(gy_sgp_x,gy_sgp_y,label=r'D8, $\alpha$=%.2f'%popt[1],alpha=alpha_xy)
#ax5.plot(gy_sgp_x,y777,color='orange',linestyle='-')
#ax5.set_yscale('log')
#ax5.set_xscale('log')
#ax5.set_ylim([0.000001,1])
#ax5.legend(loc=3,handletextpad=0.1,prop={'size':18,'family':f_family})
#ax5.set_xlabel('log'+r'$_{10}r_g$'+'(km)',size=18,family=f_family) 
#ax5.set_ylabel('log'+r'$_{10}P(r_g)$',size=18,family=f_family)
##plt.savefig('C:/python/摩拜单车/draw2/sf_4_xm5.pdf',bbox_inches='tight') 
#
#
#fig6	=	plt.figure(figsize=(size_x, size_y))
#ax6	=	fig6.add_subplot(1,	1,	1)
#plt.yticks(fontproperties = f_family)
#plt.xticks(fontproperties = f_family) 
#plt.tick_params(labelsize=18)
##ax6.scatter(dis_cd_x1,dis_cd_y1)
##ax6.scatter(dis_xa_x2,dis_xa_y2)
#popt, pcov = curve_fit(func4, dis_xm_x1[2:],dis_xm_y1[2:],maxfev = 10000)
#y888 = [func4(i, *popt) for i in dis_xm_x1]
#ax6.scatter(dis_xm_x1,dis_xm_y1,label=r'D7, $\xi$=%.2f'%-popt[1],alpha=alpha_xy)
#ax6.plot(dis_xm_x1,y888,color='b',linestyle='-')
#popt, pcov = curve_fit(func4, dis_sgp_x1[3:],dis_sgp_y1[3:],maxfev = 10000)
#y777 = [func4(i, *popt) for i in dis_sgp_x1]
#ax6.scatter(dis_sgp_x1,dis_sgp_y1,label=r'D8, $\xi$=%.2f'%-popt[1],alpha=alpha_xy)
#ax6.plot(dis_sgp_x1,y777,color='orange',linestyle='-')
#ax6.set_yscale('log')
#ax6.set_xscale('log')
#ax6.set_ylim([0.000001,1])
#ax6.set_xlim([0.1,50])
#ax6.legend(loc=1,handletextpad=0.1,prop={'size':18,'family':f_family})
#ax6.set_xlabel('log'+r'$_{10}\langle d \rangle$'+'(km)',size=18,family=f_family) 
#ax6.set_ylabel('log'+r'$_{10}P(\langle d \rangle)$',size=18,family=f_family)
##plt.savefig('C:/python/摩拜单车/draw2/sf_4_xm6.pdf',bbox_inches='tight') 
 




